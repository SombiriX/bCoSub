Design Notes:

Implement polymorphism in risk fields
- Decided to use single table inheritance
    - Nullable fields within a single source table
    - Polymorphism is achieved using the property decorator
- Decided against multiple table inheritance
    - It's likely that all fields would be accessed at the same time. This method would require joining on multiple tables when trying to get the fields associated with a given entry
        - Using abstract base class creates redundant data in the DB
        - Not using abstract base class adds an intermediate table which needs inner_join with any query
REFs: https://lukeplant.me.uk/blog/posts/avoid-django-genericforeignkey/